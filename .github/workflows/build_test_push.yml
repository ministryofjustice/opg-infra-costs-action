name: Costs to Metrics

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test Costs to Metrics
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
  build:
    name: "Build & Push Containers"
    runs-on: ubuntu-latest
    needs: test
    outputs:
      tag: ${{ steps.bump_version.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Extract branch name
        run: |
          if [ "${{ github.head_ref }}" == "" ]; then
            echo BRANCH_NAME=main >> $GITHUB_ENV
          else
            echo BRANCH_NAME=${{ github.head_ref }} >> $GITHUB_ENV
          fi
        id: extract_branch
      - uses: unfor19/install-aws-cli-action@v1

      - name: Build Container
        run: |
          make build
      - name: Trivy Image Vulnerability Scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: costs-to-metrics:latest
          severity: 'HIGH,CRITICAL'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Bump version
        id: bump_version
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INITIAL_VERSION: 1.0.0
          DEFAULT_BUMP: minor
          PRERELEASE_SUFFIX: ${{ env.BRANCH_NAME }}
          RELEASE_BRANCHES: main
          WITH_V: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/costs-to-metrics-ci
          role-duration-seconds: 3600
          role-session-name: CostsToMetricsGithubAction

      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: 311462405659

      - name: Push Container
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          COSTS_ECR_REPOSITORY: costs-to-metrics
        run: |
          docker tag costs-to-metrics:latest $ECR_REGISTRY/$COSTS_ECR_REPOSITORY:${{ steps.bump_version.outputs.tag }}
          docker tag costs-to-metrics:latest $ECR_REGISTRY/$COSTS_ECR_REPOSITORY:latest
          if [ $BRANCH_NAME == "main" ]; then
            docker tag costs-to-metrics:latest $ECR_REGISTRY/$COSTS_ECR_REPOSITORY:main-${{ steps.bump_version.outputs.tag }}
            # We want all of the tags pushed
            docker push --all-tags $ECR_REGISTRY/$COSTS_ECR_REPOSITORY
          else
            docker push $ECR_REGISTRY/$COSTS_ECR_REPOSITORY:${{ steps.bump_version.outputs.tag }}
          fi

  terraform:
    name: "Terraform Plan/Apply"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Extract branch name
        run: |
          if [ "${{ github.head_ref }}" == "" ]; then
            echo BRANCH_NAME=main >> $GITHUB_ENV
          else
            echo BRANCH_NAME=${{ github.head_ref }} >> $GITHUB_ENV
          fi
        id: extract_branch
      - uses: unfor19/install-aws-cli-action@v1
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.4
      - name: Configure AWS Credentials For Terraform
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-duration-seconds: 3600
          role-session-name: CostsToMetricsGithubAction

      - name: Lint Terraform
        id: tf_lint
        run: terraform fmt -check -recursive
        working-directory: ./terraform/shared

      - name: Terraform Plan
        env:
          TF_VAR_costs_to_sqs_lambda_container_version: ${{ needs.build.outputs.tag }}
          TF_VAR_ship_to_queue_lambda_container_version: ${{ needs.build.outputs.tag }}

        run: |
          terraform init -input=false
          terraform plan -lock-timeout=300s -input=false -parallelism=30
        working-directory: ./terraform/shared

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        env:
          TF_VAR_costs_to_sqs_lambda_container_version: ${{ needs.build.outputs.tag }}
          TF_VAR_ship_to_queue_lambda_container_version: ${{ needs.build.outputs.tag }}
        run: |
          terraform init -input=false
          terraform apply -lock-timeout=300s -input=false -auto-approve -parallelism=30
        working-directory: ./terraform/shared
